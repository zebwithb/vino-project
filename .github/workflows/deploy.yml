name: Deploy to Production

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  # Build and Push Docker Images
  build-and-push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      fastapi-image: ${{ steps.meta-fastapi.outputs.tags }}
      reflex-image: ${{ steps.meta-reflex.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for FastAPI
        id: meta-fastapi
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/fastapi
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push FastAPI image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.fastapi
          push: true
          tags: ${{ steps.meta-fastapi.outputs.tags }}
          labels: ${{ steps.meta-fastapi.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata for Reflex
        id: meta-reflex
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/reflex
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push Reflex image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.reflex
          push: true
          tags: ${{ steps.meta-reflex.outputs.tags }}
          labels: ${{ steps.meta-reflex.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Deploy to Production (placeholder for your deployment target)
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          echo "üöÄ Deploying VINO Project to production..."
          echo "FastAPI Image: ${{ needs.build-and-push.outputs.fastapi-image }}"
          echo "Reflex Image: ${{ needs.build-and-push.outputs.reflex-image }}"
          
          # Add your deployment commands here
          # For example, if using Docker Swarm, Kubernetes, or cloud services
          
          # Example for remote Docker host:
          # docker-compose -f docker-compose.prod.yml up -d
          
          # Example for Kubernetes:
          # kubectl set image deployment/fastapi fastapi=${{ needs.build-and-push.outputs.fastapi-image }}
          # kubectl set image deployment/reflex reflex=${{ needs.build-and-push.outputs.reflex-image }}
          
          echo "‚úÖ Deployment completed successfully!"

      - name: Run health checks
        run: |
          echo "üîç Running post-deployment health checks..."
          # Add your health check commands here
          # curl -f https://your-domain.com/health
          echo "‚úÖ Health checks passed!"

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "‚úÖ Deployment successful!"
          else
            echo "‚ùå Deployment failed!"
          fi
          # Add notification logic here (Slack, Discord, email, etc.)
