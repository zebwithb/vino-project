# This file is dedicated for the CI/CD integration testing environment.
services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  fastapi:
    # Use the image tag from the environment variable
    image: ${FASTAPI_IMAGE_TAG}
    # The build context is now ignored because 'image' is specified
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      # This tells compose to get the value from the shell and set it in the container.
      - GOOGLE_API_KEY
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma
    volumes:
      - ./data:/app/data
      - ./documents:/app/documents
      - chromadb_data:/app/data/chroma
    networks:
      - app-network

  frontend:
    # Use the image tag from the environment variable
    image: ${REFLEX_IMAGE_TAG}
    build:
      context: .
      dockerfile: Dockerfile.reflex
    command: ["echo", "Frontend service placeholder for CI"]
    networks:
      - app-network

volumes:
  chromadb_data:
  redis_data:

networks:
  app-network:
    driver: bridge